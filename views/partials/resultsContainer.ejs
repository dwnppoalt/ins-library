<%
// Utility functions (moved outside of EJS tags)
function highlightMatch(text, query) {
    if (!query) return text;
    const searchTerms = query.split(/\s+/).filter(term => term.length > 0);
    const regex = new RegExp(`(${searchTerms.join('|')})`, 'gi');
    return text.replace(regex, '<strong class="text-match">$1</strong>');
}

function highlightKeyword(keyword, query, currentKeyword) {
    if (currentKeyword) {
        return keyword === currentKeyword 
            ? `<span class="badge bg-success text-white me-1">${keyword}</span>`
            : `<span class="badge bg-success bg-opacity-10 text-success me-1">${keyword}</span>`;
    }
    if (!query) return `<span class="badge bg-success bg-opacity-10 text-success me-1">${keyword}</span>`;
    const searchTerms = query.split(/\s+/).filter(term => term.length > 0);
    const regex = new RegExp(`(${searchTerms.join('|')})`, 'gi');
    return regex.test(keyword) 
        ? `<span class="badge bg-success text-white me-1">${keyword}</span>`
        : `<span class="badge bg-success bg-opacity-10 text-success me-1">${keyword}</span>`;
}

function calculateScore(result, query) {
    if (!query) return 0;
    const searchTerms = query.split(/\s+/).filter(term => term.length > 0);
    const regex = new RegExp(`(${searchTerms.join('|')})`, 'gi');
    const countMatches = text => (text.match(regex) || []).length;
    return (countMatches(result.title) * 3) +
           (countMatches(result.abstract)) +
           (countMatches(result.authors.join(' ')) * 2) +
           (countMatches(result.keywords.join(' ')) * 2);
}

// Initialize pagination
const itemsPerPage = 5;
const totalPages = Math.ceil(searchResults.length / itemsPerPage);

// Sort results
if (sort === 'oldest') {
    searchResults.sort((a, b) => a.year - b.year);
} else if (sort === 'newest') {
    searchResults.sort((a, b) => b.year - a.year);
} else if (sort === 'relevance' && searchQuery) {
    searchResults.sort((a, b) => calculateScore(b, searchQuery) - calculateScore(a, searchQuery));
}
%>

<% if (searchResults.length === 0) { %>
    <div class="text-center py-5">
        <i class="bi bi-search display-1 text-muted"></i>
        <h4 class="mt-3">No results found</h4>
        <p class="text-muted"><%= errmessage %></p>
    </div>
<% } else { %>
    <div class="results-container">
        <% if (!hideSort) { %>
            <!-- ...existing sorting controls code... -->
        <% } %>
        
        <div id="searchResults">
            <% searchResults.forEach((result, index) => { %>
                <% 
                const authors = result.authors.map(author => {
                    const parts = author.split(' ');
                    const lastName = parts.pop();
                    const initials = parts.map(part => part.charAt(0) + '.').join(' ');
                    return `${lastName}, ${initials}`;
                }).join(', ');
                %>
                <div class="card border-0 shadow-sm hover-card mb-3 result-item" data-page="<%= Math.floor(index / itemsPerPage) + 1 %>">
                    <div class="card-body" id="<%= result.id %>">
                        <h5 class="card-title mb-3">
                            <%- highlightMatch(result.title, searchQuery) %>
                            <% if (sort === 'relevance' && searchQuery) { %>
                                <small class="text-muted" style="font-size: 0.7em;">
                                    (Score: <%= calculateScore(result, searchQuery) %>)
                                </small>
                            <% } %>
                        </h5>
                        <div class="meta mb-2">
                            <i class="bi bi-people"></i>
                            <%- highlightMatch(authors, searchQuery) %>
                        </div>
                        <div class="meta mb-3">
                            <i class="bi bi-calendar"></i>
                            Published in <%- highlightMatch(result.year.toString(), searchQuery) %>
                        </div>
                        <p class="card-text">
                            <%- highlightMatch(result.abstract.substring(0, 300) + (result.abstract.length > 300 ? '...' : ''), searchQuery) %>
                        </p>
                        <div class="keywords mb-3">
                            <% result.keywords.forEach(keyword => { %>
                                <%- highlightKeyword(keyword, searchQuery, locals.keyword ? locals.keyword.word : null) %>
                            <% }) %>
                        </div>
                    </div>
                    <div class="card-footer bg-transparent border-top">
                        <div class="d-flex justify-content-between align-items-center">
                            <button class="btn btn-outline-success btn-sm" onclick="window.location.href = '/thesis/<%= result.id %>'">
                                Read thesis 
                                <i class="bi bi-arrow-right ms-1"></i>
                            </button>
                            <button class="btn btn-outline-success btn-sm save-btn" id="save-<%= result.id %>" data-thesis-id="<%= result.id %>">
                                <i class="bi bi-bookmark-fill me-2"></i>
                                <span class="save-text">Save</span>
                            </button>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-4">
            <nav aria-label="Search results pages">
                <ul class="pagination">
                    <li class="page-item disabled" id="prevPage">
                        <a class="page-link" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <%= i === 1 ? 'active' : '' %>">
                            <a class="page-link" href="#" data-page="<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                    <li class="page-item <%= totalPages === 1 ? 'disabled' : '' %>" id="nextPage">
                        <a class="page-link" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>

    <script>
        // Saved theses management
        const savedTheses = new Set(JSON.parse(localStorage.getItem('savedTheses') || '[]'));

        document.querySelectorAll('.save-btn').forEach(button => {
            const thesisId = button.dataset.thesisId;
            const saveText = button.querySelector('.save-text');
            
            if (savedTheses.has(thesisId)) {
                button.classList.add('active');
                saveText.textContent = 'Saved';
            }

            button.addEventListener('click', async () => {
                if (button.disabled) return;
                
                const method = savedTheses.has(thesisId) ? 'remove' : 'add';
                button.disabled = true;
                button.innerHTML = `<span class="spinner-border spinner-border-sm"></span>`;

                try {
                    const response = await fetch(`${window.location.origin}/save/${thesisId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ method })
                    });

                    if (response.ok) {
                        method === 'add' ? savedTheses.add(thesisId) : savedTheses.delete(thesisId);
                        button.classList.toggle('active', method === 'add');
                        button.innerHTML = `<i class="bi bi-bookmark-fill me-2"></i><span class="save-text">${method === 'add' ? 'Saved' : 'Save'}</span>`;
                        localStorage.setItem('savedTheses', JSON.stringify([...savedTheses]));
                    }
                } catch (error) {
                    console.error('Error:', error);
                    button.innerHTML = `<i class="bi bi-bookmark-fill me-2"></i><span class="save-text">${savedTheses.has(thesisId) ? 'Saved' : 'Save'}</span>`;
                } finally {
                    button.disabled = false;
                }
            });
        });

        // Pagination
        let currentPage = 1;
        const totalPages = <%= totalPages %>;

        function showPage(pageNum) {
            document.querySelectorAll('.result-item').forEach(item => 
                item.style.display = item.dataset.page == pageNum ? 'block' : 'none'
            );

            const pagination = document.querySelector('.pagination');
            if (!pagination) return;

            const prevPageBtn = document.getElementById('prevPage');
            const nextPageBtn = document.getElementById('nextPage');
            
            document.querySelectorAll('.pagination .page-item').forEach(item => {
                if (!item.id) item.classList.toggle('active', item.querySelector(`[data-page="${pageNum}"]`));
            });

            prevPageBtn.classList.toggle('disabled', pageNum === 1);
            nextPageBtn.classList.toggle('disabled', pageNum === totalPages);
            currentPage = pageNum;
        }

        showPage(1);

        document.querySelectorAll('.pagination .page-link').forEach(link => {
            link.addEventListener('click', (e) => {
                e.preventDefault();
                const page = e.currentTarget.dataset.page;
                if (page) {
                    showPage(parseInt(page));
                } else if (e.currentTarget.getAttribute('aria-label') === 'Previous' && currentPage > 1) {
                    showPage(currentPage - 1);
                } else if (e.currentTarget.getAttribute('aria-label') === 'Next' && currentPage < totalPages) {
                    showPage(currentPage + 1);
                }
            });
        });
    </script>
<% } %>