<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="css/login.css">
    <script src="https://accounts.google.com/gsi/client" async></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <title>Login | Iskolar ni Simeon</title>

</head>
<body>
  <div class="modal fade" id="termsModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="termsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
      <div class="modal-content">
        <div class="modal-header">
          <h1 class="modal-title fs-5" id="termsModalLabel">Terms and Conditions</h1>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <%- include("partials/tac.ejs") %>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-success" id="understoodBtn">Understood</button>
        </div>
      </div>
    </div>
  </div>

  <div class="outer-container">
    <div id="background">
      <img src="images/inswhite.svg" alt="Logo" draggable="false">
      <p class="backgroundtitle montserrat-800">Iskolar ni Simeon</p>
      <p class="backgroundsubtitle montserrat-400">
        <span>From </span> <span>GJCians,</span> <span>to </span> <span>GJCians.</span>
      </p>
    </div>
    <div id="login">
      <img src="images/inswhite.svg" alt="Logo" draggable="false">
      <h1 class="montserrat-800 logintitle"></h1>
      <div id="buttonDiv" class="signin" data-bs-toggle="modal"></div>
      <div id="loader" class="loader">
        <div class="check"></div>
        <div class="error-x"></div>
      </div>
      <div id="loaderText" class="loader-text">Logging in...</div>
      <div class="footer">
        <p class="montserrat-400 verse"><i>"Let us not become weary in doing good, for at the proper time we will reap a harvest if we do not give up"</i> <br> <i><b>- Galatians 6:9</b></i></p>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function() {
        const words = document.querySelectorAll('.backgroundsubtitle span');
        words.forEach((word, index) => {
            word.style.animationDelay = `${index * 0.1}s`;
        });
    });
  </script>

<script defer>
document.addEventListener("DOMContentLoaded", function() {
  var signin = document.getElementsByClassName("signin")[0];
  var loader = document.getElementById("loader");
  var loaderTimeout;
  var understood = document.getElementById("understoodBtn");

  function handleCredentialResponse(response) {
    var termsModal = new bootstrap.Modal(document.getElementById('termsModal'));
    termsModal.show();

    understood.disabled = true;
    understood.innerText = "Read the Terms and Conditions first.";
    var termsContent = document.getElementById("termsModal").getElementsByClassName("modal-body")[0];
    
    termsContent.onscroll = function() {
      if ((termsContent.scrollTop + termsContent.clientHeight) >= termsContent.scrollHeight - 1) {
        console.log('Scroll reached bottom');
        understood.innerText = "I Understand";
        understood.disabled = false;
      }
    }

    understood.onclick = function() {
      termsModal.hide();
      
      signin.style.opacity = "0";
      signin.style.visibility = "hidden";
      loader.style.opacity = "1";
      loader.style.visibility = "visible";
      document.getElementById("loaderText").style.visibility = "visible"; // Show loader text


      console.time("Total Login Time");
      console.log(response);
      fetch("<%= server_api %>", {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          'Origin': "<%= origin %>"
        },
        body: JSON.stringify({ 
          'credential': response.credential, 
          'clientId': response.clientId 
        }),
      })
      .then(response => {
        console.timeEnd("Total Login Time");
        if (!response.ok) {
          console.error("Error fetching API.");
        }
        
        return response.json();
      })
      .then(data => {
        console.log(data);
        localStorage.setItem('savedTheses', JSON.stringify(data.saved.data.map(thesis => thesis.id || [])));
        fetch('/login/setup-session', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            jwtToken: data.jwtToken,
            userId: data.token.sub,
            name: data.token.given_name,
            email: data.token.email,
            picture: data.token.picture,
          })
        }).then(res => {
          if (res.ok) {
            showSuccess("Successfully logged in!");
          } else {
            showError("Failed to setup session");
          }
        });
      })
      .catch(error => {
        console.error("Error during login process:", error);
        showError(error.message);
      });
    }
  }

  function showSuccess(message) {
    loader.classList.remove('error');
    loader.classList.add('success');
    document.getElementById("loaderText").style.display = "block";
    document.getElementById("loaderText").textContent = message;
    
    setTimeout(() => {
      loader.classList.remove('success');
      loader.classList.add('redirect');
      const loaderText = document.getElementById("loaderText");
      loaderText.textContent = "Redirecting...";
      
      setTimeout(() => {
        location.replace('/');
      }, 1000);
    }, 1500);
  }

  function showError(error) {
    loader.classList.remove('success');
    loader.classList.add('error');
    document.getElementById("loaderText").style.display = "block";
    document.getElementById("loaderText").textContent = `Login error: ${error}`;
    setTimeout(resetLoader, 3000);
  }

  function resetLoader() {
    setTimeout(() => {
      signin.style.opacity = "1";
      signin.style.visibility = "visible";
      loader.style.opacity = "0";
      loader.style.visibility = "hidden";
      loader.classList.remove('success', 'error');
      document.getElementById("loaderText").style.display = "none";
    }, 500);
  }

  window.onload = function () {
    google.accounts.id.initialize({
      client_id: '<%= oauthid %>',
      callback: handleCredentialResponse
    });
    google.accounts.id.renderButton(
      document.getElementById("buttonDiv"),
      { theme: "outline", size: "large", text: "signin", shape: "pill", locale: "us_en"}
    );
    google.accounts.id.prompt();
  }
});
</script>

</body>
</html>
